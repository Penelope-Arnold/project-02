<h1 class="mt-4">Dashboard</h1>
<p class="lead mb-3">Welcome <%= name %></p>
<a href="/users/logout" class="btn btn-secondary">Logout</a>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<title>CMS - Express</title>
	<!-- Latest compiled and minified CSS & JS -->
	<link href="https://maxcdn.bootstrapcdn.com/bootswatch/4.0.0/flatly/bootstrap.min.css" rel="stylesheet">
	<link rel="stylesheet" media="screen" title="no title">
	<script src="https://code.jquery.com/jquery.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</head>

<body>
	<div class="container hidden">
		<div class="row top-30">
      <div class="col-md-2 col-sm-2">
        <a class="btn btn-light" href="/blog">Go to Blog</a>
      </div>
      <div class="col-md-2 col-sm-2">
        <a class="btn btn-light" href="/users">Manage Users</a>
      </div>
    </div>
		<div class="row">
			<div class="col-md-6 offset-md-3">
				<form id="cms">
					<div class="form-group">
						<label for="title">City:</label>
						<input placeholder="Post City" type="text" class="form-control" id="title">
                        <label for="title">Country:</label>
                        <input placeholder="Post Country" type="text" class="form-control" id="title">
                        <label for="title">Category:</label>
                        <input placeholder="Select Country" type="text" class="form-control" id="title">
                        <br />
                        <label for="body">Description:</label>
                        <textarea placeholder="Post Description" class="form-control" rows="10" id="body"></textarea>
                        <label for="title">Link to Photo:</label>
                        <input placeholder="Upload Photo" type="text" class="form-control" id="title">
						<div class="form-group">

							
						</div>
						<br />
						<button type="submit" class="btn btn-success submit">Submit</button>
					</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Custom Script -->
    <script type="text/javascript">
    $(document).ready(function() {
  // Getting jQuery references to the post body, title, form, and user select
  var cityInput = $("#city");
  var countryInput = $("#country");
  var categoryInput = $("#category");
  var descriptionInput = $("#description");
  var photoInput = $("#photo");
  var cmsForm = $("#cms");
  var userSelect = $("#user");
  // Adding an event listener for when the form is submitted
  $(cmsForm).on("submit", handleFormSubmit);
  // Gets the part of the url that comes after the "?" (which we have if we're updating a post)
  var url = window.location.search;
  var postId;
  var userId;
  // Sets a flag for whether or not we're updating a post to be false initially
  var updating = false;

  // If we have this section in our url, we pull out the post id from the url
  // In '?post_id=1', postId is 1
  if (url.indexOf("?post_id=") !== -1) {
    postId = url.split("=")[1];
    getPostData(postId, "post");
  }
  // Otherwise if we have an user_id in our url, preset the user select box to be our User
  else if (url.indexOf("?user_id=") !== -1) {
    userId = url.split("=")[1];
  }

  // Getting the users, and their posts
//   getUsers();

  // A function for handling what happens when the form to create a new post is submitted
  function handleFormSubmit(event) {
    event.preventDefault();
    // Wont submit the post if we are missing a city, country, or category
    if (!cityInput.val() || !countryInput.val() || !categoryInput.val() ||!descriptionInput.val() || !photoInput.val()) {
      return;
    }
    // Constructing a newPost object to hand to the database
    var newPost = {
      city: cityInput
        .val()
        .trim(),
      country: countryInput
        .val()
        .trim(),
      category: categoryInput
        .val()
        .trim(),
      description: descriptionInput
        .val()
        .trim(),
      photo: photoInput
        .val()
        .trim(),
    //   UserId: userSelect.val()

    };

    // If we're updating a post run updatePost to update a post
    // Otherwise run submitPost to create a whole new post
    if (updating) {
      newPost.id = postId;
      updatePost(newPost);
    }
    else {
      submitPost(newPost);
    }
  }

  // Submits a new post and brings user to blog page upon completion
  function submitPost(post) {
    $.post("/api/posts", post, function() {
      window.location.href = "/blog";
    });
  }

  // Gets post data for the current post if we're editing, or if we're adding to an user's existing posts
  function getPostData(id, type) {
    var queryUrl;
    switch (type) {
    case "post":
      queryUrl = "/api/posts/" + id;
      break;
    case "user":
      queryUrl = "/api/users/" + id;
      break;
    default:
      return;
    }
    $.get(queryUrl, function(data) {
      if (data) {
        console.log(data.UserId || data.id);
        // If this post exists, prefill our cms forms with its data
        cityInput.val(data.city);
        countryInput.val(data.country);
        categoryInput.val(data.category); 
        descriptionInput.val(data.description);
        photoInput.val(data.photo);
        // userId = data.UserId || data.id;
        // If we have a post with this id, set a flag for us to know to update the post
        // when we hit submit
        updating = true;
      }
    });
  }

  // A function to get Users and then render our list of Users
//   function getUsers() {
//     $.get("/api/users", renderUserList);
//   }
  // Function to either render a list of users, or if there are none, direct the user to the page
  // to create an user first
//   function renderUserList(data) {
//     if (!data.length) {
//       window.location.href = "/users";
//     }
//     $(".hidden").removeClass("hidden");
//     var rowsToAdd = [];
//     for (var i = 0; i < data.length; i++) {
//       rowsToAdd.push(createUserRow(data[i]));
//     }
//     userSelect.empty();
//     console.log(rowsToAdd);
//     console.log(userSelect);
//     userSelect.append(rowsToAdd);
//     userSelect.val(userId);
//   }

  // Creates the user options in the dropdown
//   function createUserRow(user) {
//     var listOption = $("<option>");
//     listOption.attr("value", user.id);
//     listOption.text(user.name);
//     return listOption;
//   }

  // Update a given post, bring user to the blog page when done
  function updatePost(post) {
    $.ajax({
      method: "PUT",
      url: "/api/posts",
      data: post
    })
      .then(function() {
        window.location.href = "/blog";
      });
  }
});

    </script>

</body>

</html>

